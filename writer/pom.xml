<?xml version="1.0" encoding="utf-8"?>
<!--
SPDX-FileCopyrightText: NOI Techpark <digital@noi.bz.it>

SPDX-License-Identifier: CC0-1.0
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
        <groupId>com.opendatahub.timeseries.bdp</groupId>
        <artifactId>core</artifactId>
		<version>9.0.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

	<packaging>jar</packaging>	<!-- jar packaging needed by infrastructure/utils/schema-generator -->
	<groupId>com.opendatahub.timeseries.bdp</groupId>
	<artifactId>writer</artifactId>
	<description>Data Writer for the Big Data Platform</description>

	<properties>
		<finalName>writer</finalName>
		<geotools.version>30.0</geotools.version>
		<hibernate.version>6.3.1.Final</hibernate.version>
		<keycloak.version>25.0.4</keycloak.version>
		<!--keycloak.version>999.0.0-SNAPSHOT</keycloak.version-->
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.13.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Keycloak UMA To request Resource level authorization -->
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-core</artifactId>
			<version>${keycloak.version}</version>
        </dependency>
		<dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-authz-client</artifactId>
			<version>${keycloak.version}</version>
        </dependency>

		<!-- To create JSON schema descriptions out of classes -->
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jsonSchema</artifactId>
			<version>2.15.3</version>
		</dependency>

		<!-- Data Transport Objects (see dto folder) -->
		<dependency>
			<groupId>com.opendatahub.timeseries.bdp</groupId>
			<artifactId>dto</artifactId>
			<version>9.0.0</version>
		</dependency>

		<!-- DB migration - Flyway -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>

		<!-- Hibernate: ORM with spatial entity support (Postgis, Geometry, ...) -->
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-spatial</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
			<scope>runtime</scope>
        </dependency>
		
		<!--
			Second level cache, to store entities that never change as
			for example provenance records.
		-->
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-jcache</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>3.10.8</version>
		</dependency>

		<!-- Hibernate: Rangetype support-->
		<dependency>
			<groupId>io.hypersistence</groupId>
			<artifactId>hypersistence-utils-hibernate-62</artifactId>
			<version>3.6.0</version>
		</dependency>

		<!-- Hibernate: Connection pooling -->
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-hikaricp</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<!-- geotools dependencies -->
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-api</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-epsg-hsql</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-main</artifactId>
			<version>${geotools.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.4</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.4</version>
		</dependency>
		<!-- StringSubstitutor: Replace env vars in .properties files -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.10.0</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>osgeo-alt</id>
			<url>https://repo.osgeo.org/repository/release/</url>
		</repository>
	</repositories>

	<profiles>
		<!-- packaging for the REST API deployment -->
		<profile>
			<id>default</id>
			<build>
				<finalName>${finalName}</finalName>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>

		<!-- jar packaging needed by infrastructure/utils/schema-generator -->
		<profile>
			<id>generator</id>
		</profile>
	</profiles>
</project>
